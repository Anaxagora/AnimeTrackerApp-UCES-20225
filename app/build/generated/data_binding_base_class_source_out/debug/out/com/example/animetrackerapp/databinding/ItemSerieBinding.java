// Generated by view binder compiler. Do not edit!
package com.example.animetrackerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.animetrackerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSerieBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnEditar;

  @NonNull
  public final Button btnEliminar;

  @NonNull
  public final CardView cardSerie;

  @NonNull
  public final TextView tvAnio;

  @NonNull
  public final TextView tvComentario;

  @NonNull
  public final TextView tvEstado;

  @NonNull
  public final TextView tvGenero;

  @NonNull
  public final TextView tvNombre;

  @NonNull
  public final TextView tvValoracion;

  private ItemSerieBinding(@NonNull CardView rootView, @NonNull Button btnEditar,
      @NonNull Button btnEliminar, @NonNull CardView cardSerie, @NonNull TextView tvAnio,
      @NonNull TextView tvComentario, @NonNull TextView tvEstado, @NonNull TextView tvGenero,
      @NonNull TextView tvNombre, @NonNull TextView tvValoracion) {
    this.rootView = rootView;
    this.btnEditar = btnEditar;
    this.btnEliminar = btnEliminar;
    this.cardSerie = cardSerie;
    this.tvAnio = tvAnio;
    this.tvComentario = tvComentario;
    this.tvEstado = tvEstado;
    this.tvGenero = tvGenero;
    this.tvNombre = tvNombre;
    this.tvValoracion = tvValoracion;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSerieBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSerieBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_serie, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSerieBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEditar;
      Button btnEditar = ViewBindings.findChildViewById(rootView, id);
      if (btnEditar == null) {
        break missingId;
      }

      id = R.id.btnEliminar;
      Button btnEliminar = ViewBindings.findChildViewById(rootView, id);
      if (btnEliminar == null) {
        break missingId;
      }

      CardView cardSerie = (CardView) rootView;

      id = R.id.tvAnio;
      TextView tvAnio = ViewBindings.findChildViewById(rootView, id);
      if (tvAnio == null) {
        break missingId;
      }

      id = R.id.tvComentario;
      TextView tvComentario = ViewBindings.findChildViewById(rootView, id);
      if (tvComentario == null) {
        break missingId;
      }

      id = R.id.tvEstado;
      TextView tvEstado = ViewBindings.findChildViewById(rootView, id);
      if (tvEstado == null) {
        break missingId;
      }

      id = R.id.tvGenero;
      TextView tvGenero = ViewBindings.findChildViewById(rootView, id);
      if (tvGenero == null) {
        break missingId;
      }

      id = R.id.tvNombre;
      TextView tvNombre = ViewBindings.findChildViewById(rootView, id);
      if (tvNombre == null) {
        break missingId;
      }

      id = R.id.tvValoracion;
      TextView tvValoracion = ViewBindings.findChildViewById(rootView, id);
      if (tvValoracion == null) {
        break missingId;
      }

      return new ItemSerieBinding((CardView) rootView, btnEditar, btnEliminar, cardSerie, tvAnio,
          tvComentario, tvEstado, tvGenero, tvNombre, tvValoracion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
